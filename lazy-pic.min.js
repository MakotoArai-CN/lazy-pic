function lazyPic(t,e,i,n){this.emt=t,this.animeTime=e,this.thumbnailType=i,this.lazyLoad=function(){const t=$(this.emt),i=new IntersectionObserver(this.callback.bind(this));t.each((t,e)=>{i.observe(e)})},this.callback=function(t){t.forEach(t=>{t.isIntersecting&&this.handleImageIntersection(t)},this)},this.handleImageIntersection=function(t){t.target.complete?this.fadeOutThumbnail(t):$(t.target).on("load",()=>{t.target.complete&&this.fadeOutThumbnail(t)})},this.fadeOutThumbnail=function(t){const e=t.target.previousElementSibling?$(t.target.previousElementSibling):$(t.target.nextElementSibling);0<e.length?e.css("opacity","0").fadeOut(this.animeTime):console.log("no thumbnail")}}